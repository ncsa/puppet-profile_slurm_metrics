---
lookup_options:
  "profile_slurm::(.*)::(.*)dependencies$":
    merge:
      strategy: "unique"

anchors:
  - &slurmrestd_group_name
    "slurmrestd"
  - &slurmrestd_port
    6820
  - &slurmrestd_user_home
    "%{lookup('slurm::slurm_conf_override.StateSaveLocation')}"
  - &slurmrestd_user_name
    "slurmrestd"

profile_slurm::client::firewall::slurmd_port: 6818
profile_slurm::client::firewall::sources: []

profile_slurm::compute::dependencies:
  - "Exec['slurm_id_check']"
  - "Service['sssd']"
profile_slurm::compute::configure_after_dependencies:
  - "Service['slurmd']"
profile_slurm::compute::slurmd_id_check_dropin_content: |
  # File managed by puppet
  [Unit]
  ConditionPathExists=/etc/slurm/id_check_success

profile_slurm::compute::storage::tmpfs_dir: null
profile_slurm::compute::storage::tmpfs_dir_refresh_command: null
profile_slurm::compute::storage::tmpfs_dir_refreshed_by: null

profile_slurm::crons::crons: {}

profile_slurm::files::files: {}

profile_slurm::scheduler::dependencies:
  - "Exec['slurm_id_check']"
  - "Service['sssd']"
profile_slurm::scheduler::configure_after_dependencies:
  - "Service['slurmctld']"
  - "Service['slurmdbd']"
profile_slurm::scheduler::slurmctld_id_check_dropin_content: |
  # File managed by puppet
  [Unit]
  ConditionPathExists=/etc/slurm/id_check_success

profile_slurm::scheduler::backup::locations:
  - "/var/spool/slurmctld.state"
  - "/var/log/slurm"

profile_slurm::scheduler::firewall::slurmdbd_port: 6819
profile_slurm::scheduler::firewall::slurmctld_port: 6817
profile_slurm::scheduler::firewall::sources: []

profile_slurm::scheduler::mailprog::sendas_address: null

# note: there are no "official" IDs for slurmrestd, but
# slurm is usually 93 and 94 doesn't seem to be widely used
profile_slurm::slurmrestd::dependencies:
  - "Service['sssd']"
profile_slurm::slurmrestd::group_id: 94
profile_slurm::slurmrestd::group_name: *slurmrestd_group_name
profile_slurm::slurmrestd::firewall_port: *slurmrestd_port
profile_slurm::slurmrestd::firewall_sources: []
profile_slurm::slurmrestd::configure_after_dependencies:
  - "Service['slurmrestd']"
profile_slurm::slurmrestd::user_home: *slurmrestd_user_home
profile_slurm::slurmrestd::user_id: 94
profile_slurm::slurmrestd::user_name: *slurmrestd_user_name

profile_slurm::telegraf::slurm_accounting_stats::enable: true
profile_slurm::telegraf::slurm_accounting_stats::interval: "1h"
profile_slurm::telegraf::slurm_accounting_stats::timeout: "30m"

profile_slurm::telegraf::slurm_detail_stats::enable: true
profile_slurm::telegraf::slurm_detail_stats::interval: "5m"
profile_slurm::telegraf::slurm_detail_stats::timeout: "2m"

profile_slurm::telegraf::slurm_job_efficiency::enable: true
profile_slurm::telegraf::slurm_job_efficiency::interval: "1h"
profile_slurm::telegraf::slurm_job_efficiency::timeout: "45m"

profile_slurm::telegraf::slurm_stats::enable: true
profile_slurm::telegraf::slurm_stats::interval: "1m"
profile_slurm::telegraf::slurm_stats::timeout: "55s"

profile_slurm::telegraf::telegraf::enable: true
profile_slurm::telegraf::telegraf::required_pkgs:
  - "telegraf"
profile_slurm::telegraf::telegraf::script_path: "/etc/telegraf/scripts/slurm"
profile_slurm::telegraf::telegraf::slurm_database: "slurm_acct_db"
profile_slurm::telegraf::telegraf::slurm_job_table: ""
# Needs to be encrypted in your project control repo OR
# can be empty if using socket auth
profile_slurm::telegraf::telegraf::slurm_password: ""
profile_slurm::telegraf::telegraf::slurm_path: "/usr/bin"
profile_slurm::telegraf::telegraf::slurm_username: "slurmdbd"

slurm::slurmrestd_options: ""
slurm::slurmrestd_port: *slurmrestd_port
slurm::slurmrestd_restart_on_failure: true
slurm::slurmrestd_service_enable: "running"
slurm::slurmrestd_service_ensure: true
slurm::slurmrestd_service_limits: {}
slurm::slurmrestd_user: *slurmrestd_user_name
slurm::slurmrestd_user_group: *slurmrestd_group_name
